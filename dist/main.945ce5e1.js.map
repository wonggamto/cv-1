{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAAJ,ulCAoDIC,EAAU,GACVC,EAAI,EAIJC,EAAO,SAAPA,IAEAC,WAAW,WAKU,OAAdJ,EAAOE,GACND,GAAW,OACQ,MAAdD,EAAOE,GACZD,GAAW,SAEXA,GAAWD,EAAOE,GAEtBN,EAAKS,UAAYJ,EACjBF,EAAMM,UAAYL,EAAOM,UAAU,EAAEJ,GACrCK,OAAOC,SAAS,EAAE,OAClBZ,EAAKY,SAAS,EAAE,MACZN,EAAIF,EAAOS,OAAO,IAElBP,GAAK,EACLC,MAEL,KAEPA","file":"main.945ce5e1.js","sourceRoot":"../src","sourcesContent":["let html = document.querySelector('#html');\nlet style = document.querySelector('#style')\nlet string = `/*大家好,我是薯条君\n接下来我要加样式了\n我要加的样式是*/\n#div1{\n    border:1px solid red;\n    width:200px;\n    height:200px;\n    \n}\n/*接下来我要把div变成一个太极图\n *看好了！\n *首先：把div变成一个圆\n*/\n#div1{\n    border-radius:50%;\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\n    border:none;\n}\n/*\n *接下来使用背景渐变是一黑一白两条鱼\n *https://cssgradient.io/\n*/\n#div1{  \n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%,\n     rgba(255,255,255,1) 50%, \n     rgba(255,255,255,1) 50%, \n     rgba(0,0,0,1) 50%);\n}\n/*接下来让阴中有阳，阳中有阴*/\n#div1::before{\n     width:100px;\n     height:100px;\n     top:0;\n     left:50%;\n     transform:translateX(-50%);\n     background:#000;\n     border-radius:50%;\n     background: radial-gradient(circle, rgba(255,255,255,1) 25%,rgba(0,0,0,1) 25%);rgba(0,0,0,1) 25%); rgba(0,0,0,1) 100%);\n }\n #div1::after{\n    width:100px;\n    height:100px;\n    bottom:0;\n    left:50%;\n    transform:translateX(-50%);\n    background:#fff ;\n    border-radius:50%;\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%,rgba(0,0,0,1) 25%,rgba(255,255,255,1) 25%,rgba(255,255,255,1) 100%,rgba(0,0,0,1) 100%);\n}\n`;\n//这里使用正则表达式完成换行，如果不使用，只会完成第一个换行，这种方法会出现每行末尾出现'<',所以不采用这种方法\n// string = string.replace(/\\n/g,'<br>');\nlet string2 = '';\nlet n = 0;\n// demo.innerHTML = string.substring(0,n); //parcel的方便之处，会自动刷新内容\n\n//这里使用递归的好处是可以设置什么时候停止，比setInterval更自由地控制什么时候\nlet step = () => {\n    // console.log('递归调用');\n    setTimeout(() => {\n        //如果是回车就不照搬\n        //如果不是回车就照搬\n\n        // string2 += string[n] === '\\n'?'<br>':string[n];\n        if(string[n] === '\\n'){\n            string2 += '<br>';\n        }else if(string[n] === ' '){\n            string2 += '&nbsp;'\n        }else{\n            string2 += string[n];\n        }\n        html.innerHTML = string2;\n        style.innerHTML = string.substring(0,n);\n        window.scrollTo(0,99999);\n        html.scrollTo(0,9999);\n        if (n < string.length-1) {\n            //n不是最后一个\n            n += 1\n            step();\n        }\n    }, 50);\n};\nstep();\n\n"]}